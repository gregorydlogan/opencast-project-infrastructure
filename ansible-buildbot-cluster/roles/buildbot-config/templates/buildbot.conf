server {
    # Enforce HTTPS by redirecting requests
    listen 80;
    server_name _;
    location / {
        return 301 https://{{ inventory_hostname }}$request_uri;
    }

    location /.well-known/acme-challenge {
        allow all;
        alias /var/www/.well-known/acme-challenge;
    }
}

server {
    listen 443 ssl;
    server_name {{ inventory_hostname }};

    root html;
    index index.html index.htm;

    proxy_set_header HOST $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_set_header X-Forwarded-Server  $host;
    proxy_set_header X-Forwarded-Host  $host;

    ssl_certificate_key /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem;
    ssl_certificate /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_prefer_server_ciphers on;
    ssl_ciphers           HIGH:!aNULL:!MD5:!3DES;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;




    # you could use / if you use domain based proxy instead of path based proxy
    location /{{buildbot_url}} {
        proxy_pass http://localhost:{{buildbot_port}}/;
    }
    location /{{buildbot_url}}sse/ {
        # proxy buffering will prevent sse to work
        proxy_buffering off;
        proxy_pass http://localhost:{{buildbot_port}}/sse/;
    }
    # required for websocket
    location /{{buildbot_url}}ws {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://localhost:{{buildbot_port}}/ws;
        # raise the proxy timeout for the websocket
        proxy_read_timeout 6000s;
    }

    location {{ url_base }} {
       alias {{ disk_base }};
       autoindex on;
    }

    location /debian {
       alias {{ deb_repo_fragment }}/public;
       autoindex on;
    }

    location /rpms {
       alias {{ rpm_repo_fragment }};
       autoindex on;
    }

    location /keys {
       alias {{ buildbot_home }}/keys;
       autoindex on;
    }
}
