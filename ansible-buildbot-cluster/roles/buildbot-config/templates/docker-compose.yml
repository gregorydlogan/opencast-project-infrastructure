version: '2'
services:
  buildbot:
    user: "{{ hostvars[inventory_hostname]['uid'] }}:{{ hostvars[inventory_hostname]['gid'] }}"
    image: "{{ docker_image_user }}/ocqa-buildbot-master:{{ docker_image_tag }}"
    restart: always
    env_file:
      - db.env
    environment:
      - BUILDBOT_WORKER_PORT=9989
    depends_on:
      - db
    #Note: This needs to be host because the SSH tunnels are coming to the docker *host* rather than the container
    network_mode: host
    volumes:
      - "{{ disk_base }}:{{ disk_base }}"
      - "{{ buildbot_home }}/buildbot-config:/buildbot"
  proxy:
    image: "nginx:stable"
    restart: always
    depends_on:
      - buildbot
    #This doesn't *need* to be host, but it's easier
    network_mode: host
    volumes:
      - "{{ buildbot_home }}/nginx-config:/etc/nginx/conf.d"
      - "{{ disk_base }}:{{ disk_base }}"
  db:
    env_file:
      - db.env
    image: "postgres:9.4"
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - "{{ buildbot_home }}/postgres-data:/var/lib/postgresql/data"
  deb_repo:
    user: "{{ hostvars[inventory_hostname]['uid'] }}:{{ hostvars[inventory_hostname]['gid'] }}"
    #This is hardcoded to latest because it *shouldn't* ever need to change
    image: "{{ docker_image_user }}/ocqa-debian-repo-base:latest"
    restart: always
    #Only listening on localhost because *aptly does not have any auth at all*
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - "{{ buildbot_home }}/aptly:/mnt/aptly/"
      - "{{ deb_repo_fragment }}:/mnt/repo/"

{% if false and inventory_hostname in groups['workers'] %}
  maria:
    image: mariadb:10
    restart: always
    ports:
      - "127.0.0.1:3307:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_ROOT_HOST=%
      - MYSQL_INITDB_SKIP_TZINFO=1

  mysql56:
    image: mysql:5.6
    restart: always
    ports:
      - "127.0.0.1:3308:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_ROOT_HOST=%
      - MYSQL_INITDB_SKIP_TZINFO=1

  mysql57:
    image: mysql:5.7
    restart: always
    ports:
      - "127.0.0.1:3309:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_ROOT_HOST=%
      - MYSQL_INITDB_SKIP_TZINFO=1
{% endif %}
