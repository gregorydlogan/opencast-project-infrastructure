---

- name: Cloning adopter reg service
  git:
    repo: https://github.com/opencast/adopter-registration-server.git
    dest: "{{ adopter_reg_home }}"
    force: true

- name: Creating python venv
  command:
    cmd: python3 -m venv {{ adopter_reg_venv }}
    creates: "{{ adopter_reg_venv }}"

- name: Installing dependencies
  pip:
    requirements: "{{ adopter_reg_home }}/requirements.txt"
    executable: "{{ adopter_reg_venv }}/bin/pip3"

- name: Templating systemd unit file
  template:
    src: oc-reg-server.service
    dest: /etc/systemd/system/oc-reg-server.service
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Generating Flask key
  lineinfile:
    path: "{{ adopter_reg_home }}/app/__init__.py"
    search_string: "super secret key"
    line: "app.secret_key = '{{ lookup('community.general.random_string', length=32, special=false) }}'"
  become: true

- name: Updating password salt
  lineinfile:
    path: "{{ adopter_reg_home }}/config.py"
    search_string: "SECURITY_PASSWORD_SALT = 'CHANGE_ME'"
    line: "    SECURITY_PASSWORD_SALT = '{{ reg_server_salt }}'"

- name: Stopping the server
  systemd:
    name: oc-reg-server
    state: stopped
    daemon_reload: true
  become: true

- name: Enabling and starting systemd unit
  systemd:
    name: oc-reg-server
    state: restarted
    enabled: true
    daemon_reload: true
  become: true

- name: Ensuring the database file exists
  uri:
    url: https://{{ inventory_hostname }}/admin
    return_content: true
  delegate_to: 127.0.0.1
  become: false

- name: Removing hardcoded superuser
  command: sqlite3 {{ adopter_reg_home }}/instance/app.db 'DELETE FROM user WHERE email="admin"; DELETE FROM roles_users WHERE user_id=1'

- name: Removing generated user to update its password
  command: sqlite3 {{ adopter_reg_home }}/instance/app.db 'DELETE FROM user WHERE email="{{ reg_server_user }}"; DELETE FROM roles_users WHERE user_id={{ opencast_user_db_id }};'

  # Role ID 1 is superuser
- name: Adding user and role
  command: sqlite3 {{ adopter_reg_home }}/instance/app.db "INSERT INTO user VALUES('oc_ansible_generated', {{ opencast_user_db_id }},'{{ reg_server_user }}','{{ reg_server_pass }}','1970-01-01 00:00:00','1970-01-01 00:00:00','','','',1); INSERT INTO roles_users VALUES({{ opencast_user_db_id }},1)"
